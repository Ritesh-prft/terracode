name: Pre-Merge Tagging and Deployment

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  tag_version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false && github.event.pull_request.state == 'open'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git for tagging
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      
      - name: Create tag based on commit message
        id: create_tag
        run: |
          # Fetch the latest commits to determine version bump
          git fetch --prune --unshallow
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          
          # Set initial version
          VERSION="1.0.0"  # Default version, can be changed as needed

          # Check commit message for version bump (MAJOR, MINOR, PATCH)
          if [[ "$LAST_COMMIT_MESSAGE" == *"MAJOR"* ]]; then
            VERSION="2.0.0"
          elif [[ "$LAST_COMMIT_MESSAGE" == *"MINOR"* ]]; then
            VERSION="1.1.0"
          elif [[ "$LAST_COMMIT_MESSAGE" == *"PATCH"* ]]; then
            VERSION="1.0.1"
          fi

          # Create tag based on version
          echo "Creating tag: $VERSION"
          git tag $VERSION
          git push origin $VERSION

      - name: Display created tag
        run: echo "Created tag: ${{ steps.create_tag.outputs.version }}"

  deploy_to_dev:
    needs: tag_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Dev environment
        run: |
          echo "Deploying to Dev with tag: ${{ needs.tag_version.outputs.version }}"
          # Add your deployment commands to Dev environment here, e.g., AWS, GCP, etc.
        
  deploy_to_qa:
    needs: deploy_to_dev
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to QA environment
        run: |
          echo "Deploying to QA with tag: ${{ needs.tag_version.outputs.version }}"
          # Add your deployment commands to QA environment here

      - name: Request QA Approval
        if: success()
        uses: peter-evans/approve-pull-request-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_prod:
    needs: deploy_to_qa
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Prod environment
        run: |
          echo "Deploying to Prod with tag: ${{ needs.deploy_to_qa.outputs.version }}"
          # Add your deployment commands to Prod environment here

      - name: Request Prod Approval
        if: success()
        uses: peter-evans/approve-pull-request-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
