- name: Update Changelog for Dev Deployment
        run: |
          TAG_NAME="${{ env.NEW_TAG }}"
          DATE=$(date +'%Y-%m-%d')
          ENVIRONMENT="dev"
          COMMIT_MESSAGE="${{ env.COMMIT_MESSAGE }}"

          # Ensure we're on the main branch to update the changelog file
          git checkout main
          git pull origin main

          # Add a changelog entry for the Dev deployment with PR commit message
          echo -e "\n#####\n## [${TAG_NAME}] - $DATE\n### Deployed to:\n- **${ENVIRONMENT}**: ${DATE}\n### Changes:\n- Deployed version ${TAG_NAME}\n- Commit Message: $COMMIT_MESSAGE\n" >> CHANGELOG_Dev.md

          # Commit and push changes
          git add CHANGELOG_Dev.md
          git commit -m "Update changelog for ${TAG_NAME} deployment to ${ENVIRONMENT}"

          # Fetch and merge remote changes before pushing
          git fetch origin main
          git merge origin/main --no-edit --allow-unrelated-histories || true

          # Handle conflicts manually if necessary
          if git ls-files -u | grep -q .; then
            echo "Merge conflicts detected, resolving..."
            git checkout --ours .github/workflows/tag.yml  # Keep local changes in workflow
            git checkout --ours CHANGELOG_Dev.md CHANGELOG_Qa.md CHANGELOG_Prod.md  # Keep local changes in changelog
            git add CHANGELOG_Dev.md CHANGELOG_Qa.md CHANGELOG_Prod.md .github/workflows/tag.yml
            git commit -m "Resolved conflicts for changelog and workflows"
          fi

          # Push the changes
          git push origin HEAD:main